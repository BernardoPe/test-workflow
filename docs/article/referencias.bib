@misc{spring-webflux-comparing-template-engines,
  title = {Spring WebFlux Comparing Template Engines},
  year = {2025},
  url = {https://github.com/xmlet/spring-webflux-comparing-template-engines},
}

@Inbook{Bucanek2009,
  title="Model-View-Controller Pattern",
  bookTitle="Learn Objective-C for Java Developers",
  year="2009",
  publisher="Apress",
  address="Berkeley, CA",
  pages="353--402",
  abstract="The Model-View-Controller design pattern is one of the most important design patterns in computer science. Whereas most patterns address specific problems, Model-View-Controller (MVC) describes the architecture of a system of objects. It can be applied to isolated subsystems or entire applications. The Model-View-Controller design pattern is also less clearly defined than many other patterns, leaving a lot of latitude for alternate implementations. It's more a philosophy than a recipe.",
  isbn="978-1-4302-2370-2",
  doi="10.1007/978-1-4302-2370-2_20",
  url="https://doi.org/10.1007/978-1-4302-2370-2_20"
}

@misc{spring-streamingresponsebody,
  title = {Streaming Response Body},
  year = {2025},
  url = {https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/servlet/mvc/method/annotation/StreamingResponseBody.html},  
}